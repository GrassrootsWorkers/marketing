<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
       default-autowire="byName">

	<import resource="classpath*:spring-datasource.xml"/>
	<import resource="classpath*:spring-redis.xml"/>
	<import resource="classpath*:dubbo-consumer.xml"/>
	<import resource="classpath*:manage/spring/task/spring-task.xml"/>
	<import resource="classpath*:manage/spring/keywords/spring-keywords.xml"/>
	<import resource="classpath*:manage/spring/user/spring-user.xml"/>
	<import resource="classpath*:manage/spring/coupon/spring-coupon.xml"/>
	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-configuration.xml"/>
	</bean>

	<!-- 事务控制 -->
	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="rollbackOnCommitFailure" value="true" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="apply*" rollback-for="Exception" read-only="false" />
			<tx:method name="del*" rollback-for="Exception" read-only="false" />
			<tx:method name="batch*" rollback-for="Exception" read-only="false"/>
			<tx:method name="create*" rollback-for="Exception" read-only="false" />
			<tx:method name="modify*" rollback-for="Exception" read-only="false" />
			<tx:method name="save*" rollback-for="Exception" read-only="false" />
			<tx:method name="saveCheckin"  rollback-for="Exception" read-only="false" propagation="REQUIRES_NEW"/>
			<tx:method name="clear*" rollback-for="Exception" read-only="false" />
			<tx:method name="update*" rollback-for="Exception" read-only="false" />
			<tx:method name="edit*" rollback-for="Exception" read-only="false" />
			<tx:method name="move*" rollback-for="Exception" read-only="false"/>
			<tx:method name="remove*" rollback-for="Exception" read-only="false"/>
			<tx:method name="delete*" rollback-for="Exception" read-only="false"/>
			<tx:method name="add*" rollback-for="Exception" read-only="false"/>
			<tx:method name="esc*" rollback-for="Exception" read-only="false"/>
			<tx:method name="new*" rollback-for="Exception" read-only="false"/>
			<tx:method name="gen*" rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" read-only="false"/>
			<tx:method name="adviseUser" rollback-for="Exception" read-only="false" />
			<tx:method name="call*" rollback-for="Exception" read-only="false" />
			<tx:method name="lost" rollback-for="Exception" read-only="false" />
			<tx:method name="canceled" rollback-for="Exception" read-only="false"  />


		</tx:attributes>
	</tx:advice>
	<aop:aspectj-autoproxy/>
	<aop:config  proxy-target-class="true">
		<aop:pointcut id="serviceMethod"
			expression="execution(* com.yao.marketing.business..*.*(..))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yao.marketing.persistences.interfaces.weixin" />
	</bean>



</beans>